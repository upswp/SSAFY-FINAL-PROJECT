buildscript {
    ext {
        springBootVersion = '2.3.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
//새롭게 추가될 모듈들에 공통적으로 적용될 내용 (setting.gradle 에 포함된 프로젝트 전부 관리)
subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.ssafy'
    version '0.1.0'

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    sourceCompatibility = 11
    dependencies {
        implementation 'com.google.guava:guava:29.0-jre'
        compile('org.springframework.boot:spring-boot-starter')
        //TODO project 진행사항 이후 dependencies 설정 진행하기.
        implementation group: 'org.springframework', name: 'spring-aop'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
        implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
        implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.17.0'


        // Security
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.3.9.RELEASE'
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // DB
        implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'
        compile 'com.pusher:pusher-java-client:2.2.1'
        implementation group: 'com.pusher', name: 'pusher-http-java', version: '1.0.0'

        // TEST
        testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
        testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testCompile group: 'junit', name: 'junit', version: '4.12'
//        implementation group: 'io.rest-assured', name: 'rest-assured-common', version: '4.1.0'
//        testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc', version: '4.1.0'

        implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.934')
        implementation 'com.amazonaws:aws-java-sdk-s3'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        //compile group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'

        implementation group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.19.4'
    }
}

//module-api와 module-web은 모두 module-common에 의존
project(':module-api') {
    dependencies {
        compile project(':module-common')
    }
}
project(':module-web') {
    dependencies {
        compile project(':module-common')
    }
}
project(':module-web') {
    dependencies {
        compile project(':module-api')
    }
}
